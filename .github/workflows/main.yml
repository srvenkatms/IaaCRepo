name: Terraform Plan and Apply with Import

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Terraform environment variables
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan -detailed-exitcode || echo "Terraform plan failed."

      - name: Detect Missing Resources
        id: missing_resources
        run: |
          terraform show -json tfplan | jq -r '.resource_changes[] | select(.change.actions == ["create"]) | .type + "." + .name + " " + .change.after.id' > missing_resources.txt
          
          # Check if any missing resources were found
          if [ -s missing_resources.txt ]; then
            echo "resources_exist=true" >> $GITHUB_ENV
          else
            echo "resources_exist=false" >> $GITHUB_ENV
          fi

      - name: Import Missing Resources
        if: env.resources_exist == 'true'
        run: |
          while IFS= read -r resource; do
            terraform import "$resource" || echo "Failed to import $resource"
          done < missing_resources.txt

      - name: Terraform Plan (after import)
        id: plan_after_import
        run: terraform plan -out=tfplan -detailed-exitcode || echo "Terraform plan failed."

  apply:
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Download Terraform Plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan
          path: .

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -input=false tfplan
